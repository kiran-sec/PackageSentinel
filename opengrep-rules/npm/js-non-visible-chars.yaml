rules:
  - id: js-non-visible-chars-in-strings
    options:
      symbolic_propagation: true
    patterns:
      - pattern-either:
          - pattern: $VAR = $STR
          - pattern: $VAR = [..., $STR, ...]
          - pattern: $FUNC(..., $STR, ...)
          - pattern: $FUNC(..., [..., $STR, ...], ...)
          - pattern: |
              {..., $KEY: $STR, ...}
      - metavariable-regex:
          # Matches strings with non-printable characters (excludes normal printable ASCII + common whitespace)
          regex: (?ms)^(b|f|u|r|B|F|U|R)?[\'\"].*[^\x20-\x7E\t\r\n].*[\'\"]$
          metavariable: $STR
    message: String containing non-visible/control characters detected - potential obfuscated payload
    languages:
      - javascript
      - typescript
    severity: ERROR
    paths:
      exclude:
        - "**/package-lock.json"
        - "**/node_modules/**"
    metadata:
      category: obfuscation
      confidence: HIGH
      impact: HIGH
      cwe:
        - "CWE-94: Code Injection"
        - "CWE-506: Embedded Malicious Code"
      references:
        - "https://attack.mitre.org/techniques/T1027/"
        - "https://attack.mitre.org/techniques/T1140/"
      description: "Detects strings containing non-visible control characters (ASCII 0-31, 127-159) which are commonly used in malware to hide obfuscated payloads, encoded executables, or bypass static analysis. These characters are rarely legitimate in normal JavaScript code."
      attack_vectors:
        - "Null-byte injection attacks"
        - "Control character obfuscation" 
        - "Binary payload embedding"
        - "Anti-analysis evasion"

  - id: js-long-string-with-non-printable
    options:
      symbolic_propagation: true
    patterns:
      - pattern-either:
          - pattern: $VAR = $STR
          - pattern: $VAR = [..., $STR, ...]
          - pattern: $FUNC(..., $STR, ...)
          - pattern: $FUNC(..., [..., $STR, ...], ...)
          - pattern: |
              {..., $KEY: $STR, ...}
      - metavariable-regex:
          # Matches strings >200 chars with significant non-printable content
          regex: (?ms)^(b|f|u|r|B|F|U|R)?[\'\"].{200,}[\'\"]$
          metavariable: $STR
      - metavariable-regex:
          # Additional check for multiple non-printable characters (higher confidence)
          regex: (?ms).*[^\x20-\x7E\t\r\n].*[^\x20-\x7E\t\r\n].*
          metavariable: $STR
    message: Long string with multiple non-printable characters detected - likely malicious payload
    languages:
      - javascript
      - typescript  
    severity: ERROR
    paths:
      exclude:
        - "**/package-lock.json"
        - "**/node_modules/**"
    metadata:
      category: malware_pattern
      confidence: HIGH
      impact: HIGH
      cwe:
        - "CWE-94: Code Injection"
        - "CWE-506: Embedded Malicious Code"
      references:
        - "https://attack.mitre.org/techniques/T1027/"
        - "https://attack.mitre.org/techniques/T1140/"
      description: "Detects long strings (>200 chars) containing multiple non-printable characters, indicating highly obfuscated malicious payloads. This pattern is extremely suspicious and commonly found in malware attempting to hide binary executables or encrypted command sequences."
      malware_techniques:
        - "Binary payload obfuscation"
        - "Encrypted command hiding"
        - "Anti-sandbox evasion"

  - id: js-unicode-tag-characters
    options:
      symbolic_propagation: true
    patterns:
      - pattern-either:
          - pattern: $VAR = $STR
          - pattern: $FUNC($STR)
          - pattern: decode($STR)
          - pattern: atob($STR)
      - metavariable-regex:
          # Detects extremely long strings (>200 chars) suggesting encoded obfuscation
          regex: (?ms)^(b|f|u|r|B|F|U|R)?[\'\"].{200,}[\'\"]$
          metavariable: $STR
    message: Suspicious long string with repetitive patterns - likely Unicode tag character obfuscation
    languages:
      - javascript
      - typescript
    severity: ERROR
    paths:
      exclude:
        - "**/package-lock.json"
        - "**/node_modules/**"
    metadata:
      category: obfuscation
      confidence: HIGH
      impact: HIGH
      cwe:
        - "CWE-94: Code Injection"
        - "CWE-506: Embedded Malicious Code"
      references:
        - "https://attack.mitre.org/techniques/T1027/"
        - "https://attack.mitre.org/techniques/T1140/"
      description: "Detects Unicode Tag Characters (U+E0000-U+E007F) and other invisible Unicode ranges commonly abused for advanced obfuscation. These characters are invisible when rendered but can encode malicious payloads."
      attack_vectors:
        - "Unicode Tag Character obfuscation"
        - "Invisible character steganography"
        - "Advanced payload hiding"

  - id: js-high-non-ascii-density
    options:
      symbolic_propagation: true
    patterns:
      - pattern-either:
          - pattern: $VAR = $STR
          - pattern: decode($STR)
          - pattern: Buffer.from($STR, $ENCODING)
      - metavariable-regex:
          # Detects strings with high density of non-printable characters (likely encoded obfuscation)
          regex: (?ms)^(b|f|u|r|B|F|U|R)?[\'\"].*([^\x20-\x7E\t\r\n].*){5,}[\'\"]$
          metavariable: $STR
    message: High non-ASCII character density detected - potential encoded obfuscated payload  
    languages:
      - javascript
      - typescript
    severity: WARNING
    metadata:
      category: obfuscation
      confidence: MEDIUM
      impact: MEDIUM
      description: "Detects strings with unusually high density of non-ASCII characters, which may indicate Unicode-encoded obfuscated payloads or binary data disguised as text."
